name: CI/CD for Backend Pod
on:
  push:
    branches:
      - main # This workflow will run whenever there's a push to the 'main' branch

jobs:
  deploy:
    runs-on: self-hosted # Your self-hosted runner

    steps:
      # Step 1: Checkout the repository code
      # This action fetches your repository's contents onto the runner's working directory.
      # The working directory for subsequent steps will be the repository root (e.g., K8s-Website-Hosting/)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build and Push Backend Image
      # This step will navigate to the directory where backend.sh is located
      # and then execute it.
      - name: Build and Push Backend Image
        run: |
          # Print current working directory (should be repo root after checkout)
          echo "Current working directory (repo root): $(pwd)"
          
          # Debug: Confirm DOCKER_PAT variable length
          echo "DOCKER_PAT length: ${#DOCKER_PAT}" 
          
          # Navigate to the directory containing backend.sh
          # Your backend.sh is in K8s-Website-Hosting/beImagebuild/
          echo "Changing directory to beImagebuild..."
          cd beImagebuild || { echo "Error: 'beImagebuild' directory not found at repo root. Exiting."; exit 1; }
          echo "Currently in: $(pwd)" # Should now be K8s-Website-Hosting/beImagebuild/
          
          # Now execute backend.sh from this directory
          ./backend.sh
        env:
          # This environment variable will be picked up by your backend.sh script for docker login
          # IMPORTANT: You must configure DOCKER_HUB_PERSONAL_ACCESS_TOKEN
          # as a secret in your GitHub repository settings.
          # Go to your repository -> Settings -> Secrets and variables -> Actions -> New repository secret
          DOCKER_PAT: ${{ secrets.DOCKER_HUB_PERSONAL_ACCESS_TOKEN }}

      # You might add more steps here, e.g., kubectl apply to update your Kubernetes deployment.
      # This would typically involve another 'run' step that executes kubectl commands
      # or uses a Kubernetes action.
